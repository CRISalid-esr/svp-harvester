"""Add value to identifiers and make fields non nullable

Revision ID: 5aadf4c08b01
Revises: 20409156f887
Create Date: 2023-09-08 17:41:03.666362

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '5aadf4c08b01'
down_revision: Union[str, None] = '20409156f887'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('harvestings', 'harvester',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.add_column('identifiers', sa.Column('value', sa.String(), nullable=False))
    op.alter_column('identifiers', 'type',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.create_index(op.f('ix_identifiers_value'), 'identifiers', ['value'], unique=False)
    op.alter_column('reference_events', 'type',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.add_column('references', sa.Column('source_identifier', sa.String(), nullable=False))
    op.create_index(op.f('ix_references_source_identifier'), 'references', ['source_identifier'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_references_source_identifier'), table_name='references')
    op.drop_column('references', 'source_identifier')
    op.alter_column('reference_events', 'type',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_index(op.f('ix_identifiers_value'), table_name='identifiers')
    op.alter_column('identifiers', 'type',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_column('identifiers', 'value')
    op.alter_column('harvestings', 'harvester',
               existing_type=sa.VARCHAR(),
               nullable=True)
    # ### end Alembic commands ###
